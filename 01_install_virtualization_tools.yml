---
- name: This play installs needed tools to provision infrastructure VMs
  hosts: vm_host
  vars_files:
    - vars/libvirt.yml
    - vars/infra_vars.yml
  become: true
  tasks:

    - name: Install needed packages
      yum:
        name: "{{ virtualization_packages.centos8 }}"
        state: latest
      when:
        - ansible_distribution == 'CentOS'
        - ansible_distribution_major_version | int == 8

    - name: Install needed packages
      yum:
        name: "{{ virtualization_packages.centos7 }}"
        state: latest
      when:
        - ansible_distribution == 'CentOS'
        - ansible_distribution_major_version | int == 7

    - name: Install needed packages
      yum:
        name: "{{ virtualization_packages.fedora }}"
        state: latest
      when:
        - ansible_distribution == 'Fedora'

    - name: Download and provision Terraform
      unarchive:
        src: "{{ terraform_release_url }}"
        dest: /usr/bin/
        mode: 755
        remote_src: yes

    - name: Virtualization services are enabled
      service:
        name: libvirtd
        state: started
        enabled: true

    - git:
        repo: "{{ terraform_libvirt_provider_url }}"
        dest: "{{ terraform_libivrt_provider_folder }}"
        force: true

    - name: Run 'install' target on libivrt-provider
      make:
        chdir: "{{ terraform_libivrt_provider_folder }}"
        target: install

    - name: Ensures terraform plugins directory exists
      file:
        path: "{{ terraform_plugin_dir }}"
        state: directory
        mode: 0744

    - name: Copy libvirt provider to plugins directory
      copy:
        src: "{{ gopath }}/bin/terraform-provider-libvirt"
        dest: "{{ terraform_plugin_dir }}"
        remote_src: true
        mode: 0755

    - name: Use TF project to ensure pool and network are defined
      terraform:
        project_path: "terraform/libvirt-resources"
        variables:
          domain: "{{ domain }}"
          network_cidr: ' ["{{ libvirt.network.network_cidr }}"]'
          cluster_name: "{{ cluster_name }}"
        force_init: true
        state: present
      
